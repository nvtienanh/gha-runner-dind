name: ci
on:
  push:
    branches:
      - main
jobs:
  docker:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # Outputs the name of the repository (owner/repo)
      - name: Build Image Name
        id: image
        run: |
          # The name of the owner and of the repository: owner/repository
          IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          source VERSION
          echo "runner_version=$RUNNER_VERSION" >> $GITHUB_OUTPUT
          echo "runner_container_hooks_version=$RUNNER_CONTAINER_HOOKS_VERSION" >> $GITHUB_OUTPUT
          echo "docker_version=$DOCKER_VERSION" >> $GITHUB_OUTPUT
          echo "buildx_version=$BUILDX_VERSION" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ steps.image.outputs.image_name }}
          tags: |
            type=raw,value=${{ steps.image.outputs.runner_version }}
          context: git

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            RUNNER_ASSETS_DIR=/home/runner
            TARGETPLATFORM=${{ matrix.platform }}
            RUNNER_VERSION=${{ steps.image.outputs.runner_version }}
            RUNNER_CONTAINER_HOOKS_VERSION=${{ steps.image.outputs.runner_container_hooks_version }}
            DOCKER_VERSION=${{ steps.image.outputs.docker_version }}
            BUILDX_VERSION=${{ steps.image.outputs.buildx_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Image digest
        run: |
          echo $"\
            Digest: ${{ steps.docker_build.outputs.digest }}
            Tags: ${{ steps.meta.outputs.tags }}"
  
  trivy:
    runs-on: ubuntu-24.04
    needs: docker

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # Outputs the name of the repository (owner/repo)
      - name: Build Image Name
        id: image
        run: |
          # The name of the owner and of the repository: owner/repository
          IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          source VERSION
          echo "runner_version=$RUNNER_VERSION" >> $GITHUB_OUTPUT

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ghcr.io/${{ steps.image.outputs.image_name }}:${{ steps.image.outputs.runner_version }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
